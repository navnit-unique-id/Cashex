package com.crisprupee.cashex;

import android.app.ProgressDialog;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.DividerItemDecoration;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.widget.ProgressBar;
import android.widget.Toast;

import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonArrayRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;

public class VehicleListActivity extends AppCompatActivity {
    private RecyclerView mList;
    private LinearLayoutManager linearLayoutManager;
    private DividerItemDecoration dividerItemDecoration;
    ArrayList cashRequests = new ArrayList();
    private RecyclerView.Adapter adapter;
    ProgressBar progressBar;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.fragment_vehicle_list);
        mList = findViewById(R.id.og_cash_requests);
        cashRequests = new ArrayList<>();
        adapter = new VehicleListAdapter(getApplicationContext(), cashRequests);
        linearLayoutManager = new LinearLayoutManager(this);
        linearLayoutManager.setOrientation(LinearLayoutManager.VERTICAL);
        dividerItemDecoration = new DividerItemDecoration(mList.getContext(), linearLayoutManager.getOrientation());
        mList.setHasFixedSize(true);
        mList.setLayoutManager(linearLayoutManager);
        mList.addItemDecoration(dividerItemDecoration);
        mList.setAdapter(adapter);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        getData();
    }


    public void getData() {
        final ProgressDialog progressDialog = new ProgressDialog(this);
        progressDialog.setMessage("Loading...");
        progressDialog.show();

        JsonArrayRequest jsonArrayRequest = new JsonArrayRequest(getString(R.string.columbus_ms_url) + "/rest/devices?username=navnit", new Response.Listener<JSONArray>() {
            @Override
            public void onResponse(JSONArray response) {
                for (int i = 0; i < response.length(); i++) {
                    try {
                        JSONObject jsonObject = response.getJSONObject(i);
                        CashRequest cashRequest  = new CashRequest();
                        cashRequest.setAmount(Double.parseDouble(getStringFromJson(jsonObject, "amount")));
                        cashRequest.setId(Long.parseLong(getStringFromJson(jsonObject, "id")));
                        cashRequest.setLenderDistance(Double.parseDouble(getStringFromJson(jsonObject, "lenderDistance")));
                        cashRequest.setLndrTransactionId(getStringFromJson(jsonObject, "lndrTransactionId"));
                        cashRequest.setPayableAmout(Double.parseDouble(getStringFromJson(jsonObject, "payableAmout")));
                        cashRequest.setPaymentMode(Integer.parseInt(getStringFromJson(jsonObject, "paymentMode")));
                        cashRequest.setPaymentSlot(Integer.parseInt(getStringFromJson(jsonObject, "paymentSlot")));
                        cashRequest.setPreferredPaymentMode(Integer.parseInt(getStringFromJson(jsonObject, "preferredPaymentMode")));
                        cashRequest.setRcvTransactionId(getStringFromJson(jsonObject, "rcvTransactionId"));
                        cashRequest.setRequesterId(Long.parseLong(getStringFromJson(jsonObject, "requesterId")));
                        cashRequest.setStatus(Integer.parseInt(getStringFromJson(jsonObject, "status")));
                        cashRequests.add(cashRequest);
                    } catch (Exception e) {
                        e.printStackTrace();
                        progressDialog.dismiss();
                    }
                }
                ((VehicleListAdapter) adapter).setVehicles(cashRequests);
                adapter.notifyDataSetChanged();
                progressDialog.dismiss();
            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                String UIMessage = "Error. Please try after some time";
                if (error.getClass().toString().contains("com.android.volley.TimeoutError")) {
                    UIMessage = "Unable to connect to internet.";
                }
                Toast toast = Toast.makeText(getApplicationContext(), UIMessage, Toast.LENGTH_SHORT);
                toast.show();
                progressDialog.dismiss();
            }
        });
        RequestQueue requestQueue = Volley.newRequestQueue(this);
        requestQueue.add(jsonArrayRequest);
    }

    private String getStringFromJson(JSONObject jsonObject, String key) {
        String result = null;
        try {
            result = jsonObject.getString(key);
        } catch (JSONException e) {
        }
        return result;
    }

}